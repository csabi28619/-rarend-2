let timetableData = {};
let tasksData = [];
let editingTaskId = null;
let editingLessonKey = null;

document.addEventListener('DOMContentLoaded', function() {
    loadFromLocalStorage();
    renderTimetable();
    renderTasks();
    updateSubjectFilter();
});

function showTab(tabName) {
    document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
    event.target.classList.add('active');
    
    document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
    document.getElementById(tabName + '-tab').classList.add('active');
}

function saveToLocalStorage() {
    localStorage.setItem('timetableData', JSON.stringify(timetableData));
    localStorage.setItem('tasksData', JSON.stringify(tasksData));
}

function loadFromLocalStorage() {
    const savedTimetable = localStorage.getItem('timetableData');
    const savedTasks = localStorage.getItem('tasksData');
    
    if (savedTimetable) {
        timetableData = JSON.parse(savedTimetable);
    }
    
    if (savedTasks) {
        tasksData = JSON.parse(savedTasks);
    }
}

function renderTimetable() {
    const tbody = document.getElementById('timetable-body');
    tbody.innerHTML = '';
    
    const timeSlots = new Set();
    const days = ['h√©tf≈ë', 'kedd', 'szerda', 'cs√ºt√∂rt√∂k', 'p√©ntek'];
    
    days.forEach(day => {
        if (timetableData[day]) {
            Object.keys(timetableData[day]).forEach(time => timeSlots.add(time));
        }
    });
    
    const sortedTimeSlots = Array.from(timeSlots).sort();
    
    sortedTimeSlots.forEach(timeSlot => {
        const row = document.createElement('tr');
        
        const timeCell = document.createElement('td');
        timeCell.className = 'time-slot';
        timeCell.textContent = timeSlot;
        row.appendChild(timeCell);
        
        days.forEach(day => {
            const dayCell = document.createElement('td');
            
            if (timetableData[day] && timetableData[day][timeSlot]) {
                const lesson = timetableData[day][timeSlot];
                const lessonDiv = document.createElement('div');
                lessonDiv.className = 'lesson';
                lessonDiv.innerHTML = `
                    <div><strong>${lesson.tant√°rgy}</strong></div>
                    <div style="font-size: 0.8rem;">${lesson.tan√°r}</div>
                    <div style="font-size: 0.8rem;">${lesson.terem}</div>
                    <div class="lesson-actions">
                        <button class="action-btn" onclick="editLesson('${day}', '${timeSlot}')">‚úèÔ∏è</button>
                        <button class="action-btn" onclick="deleteLesson('${day}', '${timeSlot}')">üóëÔ∏è</button>
                    </div>
                `;
                dayCell.appendChild(lessonDiv);
            }
            
            row.appendChild(dayCell);
        });
        
        tbody.appendChild(row);
    });
}

function showAddTimetableForm() {
    const modalBody = document.getElementById('modal-body');
    modalBody.innerHTML = `
        <h3>√öj √≥ra hozz√°ad√°sa</h3>
        <form id="timetable-form">
            <div class="form-group">
                <label for="lesson-day">Nap:</label>
                <select id="lesson-day" required>
                    <option value="">V√°lassz napot</option>
                    <option value="h√©tf≈ë">H√©tf≈ë</option>
                    <option value="kedd">Kedd</option>
                    <option value="szerda">Szerda</option>
                    <option value="cs√ºt√∂rt√∂k">Cs√ºt√∂rt√∂k</option>
                    <option value="p√©ntek">P√©ntek</option>
                </select>
            </div>
            <div class="form-group">
                <label for="lesson-time">Id≈ëpont:</label>
                <input type="text" id="lesson-time" placeholder="pl. 08:00-08:45" required>
            </div>
            <div class="form-group">
                <label for="lesson-subject">Tant√°rgy:</label>
                <input type="text" id="lesson-subject" required>
            </div>
            <div class="form-group">
                <label for="lesson-teacher">Tan√°r:</label>
                <input type="text" id="lesson-teacher" required>
            </div>
            <div class="form-group">
                <label for="lesson-room">Terem:</label>
                <input type="text" id="lesson-room" required>
            </div>
            <div class="form-actions">
                <button type="button" class="btn btn-cancel" onclick="closeModal()">M√©gse</button>
                <button type="submit" class="btn btn-save">Ment√©s</button>
            </div>
        </form>
    `;
    
    document.getElementById('modal').style.display = 'block';
    
    document.getElementById('timetable-form').addEventListener('submit', function(e) {
        e.preventDefault();
        saveTimetableEntry();
    });
}

function saveTimetableEntry() {
    const day = document.getElementById('lesson-day').value;
    const time = document.getElementById('lesson-time').value;
    const subject = document.getElementById('lesson-subject').value;
    const teacher = document.getElementById('lesson-teacher').value;
    const room = document.getElementById('lesson-room').value;
    
    if (!timetableData[day]) {
        timetableData[day] = {};
    }
    
    timetableData[day][time] = {
        tant√°rgy: subject,
        tan√°r: teacher,
        terem: room
    };
    
    saveToLocalStorage();
    renderTimetable();
    updateSubjectFilter();
    closeModal();
}

function editLesson(day, time) {
    editingLessonKey = { day, time };
    const lesson = timetableData[day][time];
    
    const modalBody = document.getElementById('modal-body');
    modalBody.innerHTML = `
        <h3>√ìra szerkeszt√©se</h3>
        <form id="timetable-form">
            <div class="form-group">
                <label for="lesson-day">Nap:</label>
                <select id="lesson-day" required>
                    <option value="h√©tf≈ë" ${day === 'h√©tf≈ë' ? 'selected' : ''}>H√©tf≈ë</option>
                    <option value="kedd" ${day === 'kedd' ? 'selected' : ''}>Kedd</option>
                    <option value="szerda" ${day === 'szerda' ? 'selected' : ''}>Szerda</option>
                    <option value="cs√ºt√∂rt√∂k" ${day === 'cs√ºt√∂rt√∂k' ? 'selected' : ''}>Cs√ºt√∂rt√∂k</option>
                    <option value="p√©ntek" ${day === 'p√©ntek' ? 'selected' : ''}>P√©ntek</option>
                </select>
            </div>
            <div class="form-group">
                <label for="lesson-time">Id≈ëpont:</label>
                <input type="text" id="lesson-time" value="${time}" required>
            </div>
            <div class="form-group">
                <label for="lesson-subject">Tant√°rgy:</label>
                <input type="text" id="lesson-subject" value="${lesson.tant√°rgy}" required>
            </div>
            <div class="form-group">
                <label for="lesson-teacher">Tan√°r:</label>
                <input type="text" id="lesson-teacher" value="${lesson.tan√°r}" required>
            </div>
            <div class="form-group">
                <label for="lesson-room">Terem:</label>
                <input type="text" id="lesson-room" value="${lesson.terem}" required>
            </div>
            <div class="form-actions">
                <button type="button" class="btn btn-cancel" onclick="closeModal()">M√©gse</button>
                <button type="submit" class="btn btn-save">Ment√©s</button>
            </div>
        </form>
    `;
    
    document.getElementById('modal').style.display = 'block';
    
    document.getElementById('timetable-form').addEventListener('submit', function(e) {
        e.preventDefault();
        updateTimetableEntry();
    });
}

function updateTimetableEntry() {
    const oldDay = editingLessonKey.day;
    const oldTime = editingLessonKey.time;
    
    const newDay = document.getElementById('lesson-day').value;
    const newTime = document.getElementById('lesson-time').value;
    const subject = document.getElementById('lesson-subject').value;
    const teacher = document.getElementById('lesson-teacher').value;
    const room = document.getElementById('lesson-room').value;
    
    delete timetableData[oldDay][oldTime];
    
    if (!timetableData[newDay]) {
        timetableData[newDay] = {};
    }
    
    timetableData[newDay][newTime] = {
        tant√°rgy: subject,
        tan√°r: teacher,
        terem: room
    };
    
    saveToLocalStorage();
    renderTimetable();
    updateSubjectFilter();
    closeModal();
    editingLessonKey = null;
}

function deleteLesson(day, time) {
    if (confirm('Biztosan t√∂r√∂lni szeretn√©d ezt az √≥r√°t?')) {
        delete timetableData[day][time];
        saveToLocalStorage();
        renderTimetable();
        updateSubjectFilter();
    }
}

function renderTasks() {
    const container = document.getElementById('tasks-list');
    const filteredTasks = getFilteredTasks();
    
    if (filteredTasks.length === 0) {
        container.innerHTML = '<div style="text-align: center; color: #7f8c8d; padding: 40px;">Nincsenek teend≈ëk</div>';
        return;
    }
    
    container.innerHTML = filteredTasks.map(task => {
        const isOverdue = new Date(task.hat√°rid≈ë) < new Date() && task.st√°tusz === 'nem k√©sz';
        const taskClass = task.st√°tusz === 'k√©sz' ? 'completed' : (isOverdue ? 'overdue' : '');
        
        return `
            <div class="task-item ${taskClass}">
                <div class="task-header">
                    <span class="task-type ${task.t√≠pus.replace(' ', '-')}">${getTaskTypeIcon(task.t√≠pus)} ${task.t√≠pus}</span>
                    <div class="task-actions">
                        <button class="action-btn" onclick="editTask(${task.id})">‚úèÔ∏è</button>
                        <button class="action-btn" onclick="deleteTask(${task.id})">üóëÔ∏è</button>
                    </div>
                </div>
                <div class="task-details">
                    <div class="task-detail">
                        <span>üìö</span>
                        <span>${task.tant√°rgy}</span>
                    </div>
                    <div class="task-detail">
                        <span>üìÖ</span>
                        <span>${formatDate(task.hat√°rid≈ë)}</span>
                    </div>
                    <div class="task-detail">
                        <button class="status-toggle ${task.st√°tusz === 'k√©sz' ? 'completed' : ''}"
                                 onclick="toggleTaskStatus(${task.id})">
                            ${task.st√°tusz === 'k√©sz' ? '‚úÖ K√©sz' : '‚è≥ Nem k√©sz'}
                        </button>
                    </div>
                </div>
            </div>
        `;
    }).join('');
}

function getTaskTypeIcon(type) {
    switch(type) {
        case 'h√°zi feladat': return 'üìù';
        case 'dolgozat': return 'üìã';
        case 'egy√©b': return 'üìå';
        default: return 'üìå';
    }
}

function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('hu-HU');
}

function getFilteredTasks() {
    const searchTerm = document.getElementById('search-input').value.toLowerCase();
    const typeFilter = document.getElementById('filter-type').value;
    const statusFilter = document.getElementById('filter-status').value;
    const subjectFilter = document.getElementById('filter-subject').value;
    
    return tasksData.filter(task => {
        const matchesSearch = task.tant√°rgy.toLowerCase().includes(searchTerm);
        const matchesType = !typeFilter || task.t√≠pus === typeFilter;
        const matchesStatus = !statusFilter || task.st√°tusz === statusFilter;
        const matchesSubject = !subjectFilter || task.tant√°rgy === subjectFilter;
        
        return matchesSearch && matchesType && matchesStatus && matchesSubject;
    });
}

function filterTasks() {
    renderTasks();
}

function showAddTaskForm() {
    editingTaskId = null;
    const modalBody = document.getElementById('modal-body');
    modalBody.innerHTML = `
        <h3>√öj teend≈ë hozz√°ad√°sa</h3>
        <form id="task-form">
            <div class="form-group">
                <label for="task-type">T√≠pus:</label>
                <select id="task-type" required>
                    <option value="">V√°lassz t√≠pust</option>
                    <option value="h√°zi feladat">üìù H√°zi feladat</option>
                    <option value="dolgozat">üìã Dolgozat</option>
                    <option value="egy√©b">üìå Egy√©b</option>
                </select>
            </div>
            <div class="form-group">
                <label for="task-subject">Tant√°rgy:</label>
                <input type="text" id="task-subject" required>
            </div>
            <div class="form-group">
                <label for="task-deadline">Hat√°rid≈ë:</label>
                <input type="date" id="task-deadline" required>
            </div>
            <div class="form-group">
                <label for="task-status">St√°tusz:</label>
                <select id="task-status" required>
                    <option value="nem k√©sz">‚è≥ Nem k√©sz</option>
                    <option value="k√©sz">‚úÖ K√©sz</option>
                </select>
            </div>
            <div class="form-actions">
                <button type="button" class="btn btn-cancel" onclick="closeModal()">M√©gse</button>
                <button type="submit" class="btn btn-save">Ment√©s</button>
            </div>
        </form>
    `;
    
    document.getElementById('modal').style.display = 'block';
    
    document.getElementById('task-form').addEventListener('submit', function(e) {
        e.preventDefault();
        saveTask();
    });
}

function editTask(taskId) {
    editingTaskId = taskId;
    const task = tasksData.find(t => t.id === taskId);
    
    const modalBody = document.getElementById('modal-body');
    modalBody.innerHTML = `
        <h3>Teend≈ë szerkeszt√©se</h3>
        <form id="task-form">
            <div class="form-group">
                <label for="task-type">T√≠pus:</label>
                <select id="task-type" required>
                    <option value="h√°zi feladat" ${task.t√≠pus === 'h√°zi feladat' ? 'selected' : ''}>üìù H√°zi feladat</option>
                    <option value="dolgozat" ${task.t√≠pus === 'dolgozat' ? 'selected' : ''}>üìã Dolgozat</option>
                    <option value="egy√©b" ${task.t√≠pus === 'egy√©b' ? 'selected' : ''}>üìå Egy√©b</option>
                </select>
            </div>
            <div class="form-group">
                <label for="task-subject">Tant√°rgy:</label>
                <input type="text" id="task-subject" value="${task.tant√°rgy}" required>
            </div>
            <div class="form-group">
                <label for="task-deadline">Hat√°rid≈ë:</label>
                <input type="date" id="task-deadline" value="${task.hat√°rid≈ë}" required>
            </div>
            <div class="form-group">
                <label for="task-status">St√°tusz:</label>
                <select id="task-status" required>
                    <option value="nem k√©sz" ${task.st√°tusz === 'nem k√©sz' ? 'selected' : ''}>‚è≥ Nem k√©sz</option>
                    <option value="k√©sz" ${task.st√°tusz === 'k√©sz' ? 'selected' : ''}>‚úÖ K√©sz</option>
                </select>
            </div>
            <div class="form-actions">
                <button type="button" class="btn btn-cancel" onclick="closeModal()">M√©gse</button>
                <button type="submit" class="btn btn-save">Ment√©s</button>
            </div>
        </form>
    `;
    
    document.getElementById('modal').style.display = 'block';
    
    document.getElementById('task-form').addEventListener('submit', function(e) {
        e.preventDefault();
        saveTask();
    });
}

function saveTask() {
    const type = document.getElementById('task-type').value;
    const subject = document.getElementById('task-subject').value;
    const deadline = document.getElementById('task-deadline').value;
    const status = document.getElementById('task-status').value;
    
    const taskData = {
        t√≠pus: type,
        tant√°rgy: subject,
        hat√°rid≈ë: deadline,
        st√°tusz: status
    };
    
    if (editingTaskId) {
        const taskIndex = tasksData.findIndex(t => t.id === editingTaskId);
        tasksData[taskIndex] = { ...taskData, id: editingTaskId };
    } else {
        const newId = tasksData.length > 0 ? Math.max(...tasksData.map(t => t.id)) + 1 : 1;
        tasksData.push({ ...taskData, id: newId });
    }
    
    saveToLocalStorage();
    renderTasks();
    updateSubjectFilter();
    closeModal();
}

function deleteTask(taskId) {
    if (confirm('Biztosan t√∂r√∂lni szeretn√©d ezt a teend≈ët?')) {
        tasksData = tasksData.filter(t => t.id !== taskId);
        saveToLocalStorage();
        renderTasks();
        updateSubjectFilter();
    }
}

function toggleTaskStatus(taskId) {
    const task = tasksData.find(t => t.id === taskId);
    task.st√°tusz = task.st√°tusz === 'k√©sz' ? 'nem k√©sz' : 'k√©sz';
    saveToLocalStorage();
    renderTasks();
}

function updateSubjectFilter() {
    const subjectFilter = document.getElementById('filter-subject');
    const subjects = new Set();
    
    Object.values(timetableData).forEach(day => {
        Object.values(day).forEach(lesson => {
            subjects.add(lesson.tant√°rgy);
        });
    });
    
    tasksData.forEach(task => {
        subjects.add(task.tant√°rgy);
    });
    
    const currentValue = subjectFilter.value;
    subjectFilter.innerHTML = '<option value="">Minden tant√°rgy</option>';
    
    Array.from(subjects).sort().forEach(subject => {
        const option = document.createElement('option');
        option.value = subject;
        option.textContent = subject;
        if (subject === currentValue) option.selected = true;
        subjectFilter.appendChild(option);
    });
}

function exportTimetable() {
    let csvContent = '';
    Object.entries(timetableData).forEach(([day, times]) => {
        Object.entries(times).forEach(([time, lesson]) => {
            csvContent += `${day};${time};${lesson.tant√°rgy};${lesson.tan√°r};${lesson.terem}\n`;
        });
    });
    
    downloadFile('orarend.txt', csvContent);
}

function exportTasks() {
    let csvContent = '';
    tasksData.forEach(task => {
        csvContent += `${task.t√≠pus};${task.tant√°rgy};${task.hat√°rid≈ë};${task.st√°tusz}\n`;
    });
    
    downloadFile('teendok.txt', csvContent);
}

function downloadFile(filename, content) {
    const element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));
    element.setAttribute('download', filename);
    element.style.display = 'none';
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
}

function importTimetable() {
    const file = document.getElementById('import-timetable').files[0];
    if (!file) return;
    
    const reader = new FileReader();
    reader.onload = function(e) {
        const content = e.target.result;
        const lines = content.split('\n').filter(line => line.trim());
        
        timetableData = {};
        lines.forEach(line => {
            const [day, time, subject, teacher, room] = line.split(';');
            if (day && time && subject && teacher && room) {
                if (!timetableData[day]) timetableData[day] = {};
                timetableData[day][time] = {
                    tant√°rgy: subject,
                    tan√°r: teacher,
                    terem: room
                };
            }
        });
        
        saveToLocalStorage();
        renderTimetable();
        updateSubjectFilter();
        alert('√ìrarend sikeresen import√°lva!');
    };
    reader.readAsText(file);
}

function importTasks() {
    const file = document.getElementById('import-tasks').files[0];
    if (!file) return;
    
    const reader = new FileReader();
    reader.onload = function(e) {
        const content = e.target.result;
        const lines = content.split('\n').filter(line => line.trim());
        
        tasksData = [];
        lines.forEach((line, index) => {
            const [type, subject, deadline, status] = line.split(';');
            if (type && subject && deadline && status) {
                tasksData.push({
                    id: index + 1,
                    t√≠pus: type,
                    tant√°rgy: subject,
                    hat√°rid≈ë: deadline,
                    st√°tusz: status
                });
            }
        });
        
        saveToLocalStorage();
        renderTasks();
        updateSubjectFilter();
        alert('Teend≈ëk sikeresen import√°lva!');
    };
    reader.readAsText(file);
}

function closeModal() {
    document.getElementById('modal').style.display = 'none';
    editingTaskId = null;
    editingLessonKey = null;
}

window.onclick = function(event) {
    const modal = document.getElementById('modal');
    if (event.target === modal) {
        closeModal();
    }
}
